/**
 * @constructor
 */
 
function LevelLoader() {

}

LevelLoader.prototype = {

	loadLevel : function(floors, levelWidth, levelHeight, ground, wallsH, wallsV, roomNumber, terminals){
		var data = [0, 0, 14, 4, 2,	// rooms
					 0, 0, 12, 4, 2, 
					 0, 0, 8, 2, 4,
					 0, 4, 12, 10, 4,
					 0, 2, 8, 6, 4,
					 0, 14, 10, 2, 4,
					 0, 8, 10, 6, 2,
					 0, 8, 8, 8, 2,
					 0, 0, 0, 4, 8,
					 0, 4, 5, 6, 3,
					 0, 10, 5, 3, 3,
					 0, 13, 5, 3, 3,
					 0, 4, 0, 12, 5,
					 1, 0, 0, 3, 3,
					 1, 3, 0, 3, 3, 
					 1, 6, 0, 7, 3,
					 1, 13, 0, 3, 3,
					 1, 0, 3, 6, 2, 
					 1, 6, 3, 7, 2,
					 1, 13, 3, 3, 2,
					 1, 0, 5, 10, 3,
					 1, 10, 5, 3, 3,
					 1, 13, 5, 3, 3,
					 1, 0, 8, 2, 8,
					 1, 2, 8, 7, 2,
					 1, 2, 10, 3, 5,
					 1, 5, 10, 2, 5,
					 1, 7, 10, 2, 3,
					 1, 7, 13, 2, 2,
					 1, 2, 15, 8, 1, 
					 1, 9, 8, 1, 7,
					 1, 10, 9, 2, 4,
					 1, 12, 8, 2, 6,
					 1, 14, 10, 2, 4,
					 1, 10, 14, 6, 2,
					 2, 0, 0, 3, 3,
					 2, 3, 0, 4, 3,
					 2, 7, 0, 3, 3,
					 2, 10, 0, 3, 3,
					 2, 13, 0, 3, 3,
					 2, 0, 3, 3, 1,
					 2, 3, 3, 4, 2,
					 2, 7, 3, 3, 4,
					 2, 10, 3, 2, 4,
					 2, 12, 3, 2, 7,
					 2, 14, 3, 2, 7,
					 2, 0, 4, 1, 5,
					 2, 1, 4, 2, 5,
					 2, 3, 5, 4, 4, 
					 2, 0, 9, 7, 1,
					 2, 0, 10, 3, 3,
					 2, 0, 13, 3, 3,
					 2, 3, 10, 4, 6,
					 2, 7, 7, 1, 9,
					 2, 8, 7, 2, 2,
					 2, 10, 9, 2, 4,
					 2, 8, 9, 2, 4,
					 2, 8, 13, 4, 1,
					 2, 8, 14, 4, 2,
					 2, 12, 10, 2, 4,
					 2, 14, 10, 2, 4,
					 2, 12, 14, 2, 2,
					 2, 14, 14, 2, 2,
	 				 2, 10, 7, 2, 2,
					 0, 14, 14, 2, 2,
					 1, 14, 8, 2, 2,
					 1, 10, 13, 2, 1,
					 1, 10, 8, 2, 1,
					 3, 0, 0, 2, 2,
					 3, 2, 0, 2, 2,
					 3, 0, 2, 2, 2,
					 3, 2, 2, 2, 2,
					 3, 0, 4, 2, 3,
					 3, 2, 4, 2, 3,
					 3, 4, 0, 3, 3,
					 3, 7, 0, 3, 3,
					 3, 0, 7, 3, 3,
					 3, 0, 10, 3, 3,
					 3, 0, 13, 3, 3, 
					 3, 4, 3, 4, 2,
					 3, 4, 5, 2, 2,
					 3, 10, 0, 4, 2,
					 3, 14, 0, 2, 4,
					 3, 3, 7, 3, 6,
					 3, 6, 5, 2, 8,
					 3, 8, 3, 2, 5,
					 3, 10, 2, 3, 6,
					 3, 13, 2, 1, 6,
					 3, 3, 13, 7, 3,
					 3, 10, 14, 6, 2,
					 3, 10, 9, 2, 5,
					 3, 8, 9, 2, 4,
					 3, 8, 8, 4, 1,
					 3, 12, 8, 2, 2,
					 3, 12, 10, 2, 4,
					 3, 14, 4, 2, 4,
					 3, 14, 8, 2, 2,
					 3, 14, 10, 2, 4,
					 4, 0, 0, 4, 4,
					 4, 0, 4, 3, 3,
					 4, 0, 7, 3, 3,
					 4, 4, 0, 3, 3,
					 4, 4, 3, 3, 1,
					 4, 7, 0, 5, 4,
					 4, 12, 0, 4, 3,
					 4, 12, 3, 2, 5,
					 4, 14, 3, 2, 1,
					 4, 14, 4, 2, 4,
					 4, 12, 8, 4, 8,
					 4, 3, 13, 9, 3,
					 4, 0, 10, 3, 6,
					 4, 3, 4, 1, 3,
					 4, 4, 4, 8, 1, 
					 4, 11, 5, 1, 3,
					 4, 4, 12, 3, 1,
					 4, 4, 5, 7, 7,
					 4, 3, 7, 1, 3,
					 4, 3, 10, 1, 3,
					 4, 11, 8, 1, 2,
					 4, 11, 10, 1, 2,
					 4, 7, 12, 3, 1,
					 4, 10, 12, 2, 1
					];
		var levelSize = levelWidth*levelHeight;
		this.levelWidth = levelWidth;
		this.levelSize = levelSize;
			
		
		this.roomCount = 1;
		for (var i=0; i<data.length; i+=5) {
			for (var y=0; y<data[i+4]; ++y) {
				for (var x=0; x<data[i+3]; ++x) {
					roomNumber[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+x] = this.roomCount;
				}
				wallsV[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]] = -1;
				wallsV[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+data[i+3]] = -1;
			}
			for (var x=0; x<data[i+3]; ++x) {
				wallsH[data[i]*levelSize+(data[i+2])*levelWidth+data[i+1]+x] = -1;
				wallsH[data[i]*levelSize+(data[i+2]+data[i+4])*levelWidth+data[i+1]+x] = -1;
			}
			if (  this.roomCount== 11 || this.roomCount== 12
				 || this.roomCount== 14 || this.roomCount== 17
				 || this.roomCount==38 || this.roomCount==51 || this.roomCount==52
				 || this.roomCount==75 || this.roomCount==77) {
				// elevators up
				for (var y=0; y<data[i+4]; ++y) {
					for (var x=0; x<data[i+3]; ++x) {
						ground[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+x] = 64;
					}
				}
			} else if (  this.roomCount== 22 || this.roomCount== 23
				 || this.roomCount==36 || this.roomCount==40
				 || this.roomCount==76 || this.roomCount==78 || this.roomCount==79
				 || this.roomCount == 101 || this.roomCount == 102) {
				// elevators down
				for (var y=0; y<data[i+4]; ++y) {
					for (var x=0; x<data[i+3]; ++x) {
						ground[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+x] = 65;
					}
				}
			} else if (this.roomCount == 6
				|| this.roomCount==32
				|| this.roomCount==57 || this.roomCount==60 || this.roomCount==61
				|| this.roomCount==96) {
				// stairs up
				for (var y=0; y<4; ++y) {
					for (var x=0; x<data[i+3]; ++x) {
						ground[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+x] = 128+y;
					}
				}
			} else if (this.roomCount == 34
				|| this.roomCount==56
				|| this.roomCount==92 || this.roomCount==95 || this.roomCount==98
				|| this.roomCount==108) {
				// stairs down
				for (var y=data[i+4]-4; y<data[i+4]; ++y) {
					for (var x=0; x<data[i+3]; ++x) {
						ground[data[i]*levelSize+(data[i+2]+y)*levelWidth+data[i+1]+x] = 132+y-data[i+4];
					}
				}
			}
			

			
			++this.roomCount;
		}

		this.passageways = new Array(this.roomCount*this.roomCount).fill(false);
		this.doorCount = 1;
		this.terminalCount = 0;
		data = [0, 0, 11, 1, 1, 1, 12,	// terminals
				0, 1, 13, 1, 1, 0, 14,
				0, 1, 14, 3, 0, 4, 15,
				0, 6, 12, 3, 1, 4, 12,
				0, 4, 8, 3, 0, 10, 6,
				0, 8, 10, 2, 1, 9, 10,
				0, 4, 0, 2, 0, 4, 4,
				0, 15, 15, 0, 0, 14, 15,
				1, 9, 7, 1, 1, 8, 5,
				1, 7, 0, 3, 0, 6, 1,
				1, 3, 0, 3, 1, 4, 3,
				1, 0, 4, 1, 1, 1, 3,
				1, 0, 5, 3, 1, 1, 8,
				1, 0, 15, 1, 0, 2, 15,
				1, 9, 8, 3, 0, 9, 9,
				1, 4, 9, 1, 1, 2, 10,
				1, 4, 10, 3, 1, 12, 3,
				1, 8, 10, 3, 1, 8, 13,
				1, 15, 14, 0, 1, 13, 14,
				1, 12, 8, 2, 0, 14, 8,
				1, 15, 4, 0, 1, 14, 3,
				2, 3, 4, 1, 1, 5, 5,
				2, 4, 4, 1, 1, 4, 3,
				2, 6, 4, 1, 0, 7, 3,
				2, 9, 3, 0, 0, 7, 6,
				2, 4, 15, 1, 0, 3, 14,
				2, 5, 15, 1, 0, 3, 11,
				2, 12, 0, 3, 1, 11, 3,
				2, 10, 6, 1, 0, 12, 6,
				2, 12, 9, 2, 0, 14, 9,
				2, 15, 9, 0, 1, 14, 3,
				2, 11, 13, 0, 1, 10, 14,
				2, 8, 15, 1, 0, 8, 14,
				2, 7, 7, 3, 0, 8, 8,
				2, 9, 7, 3, 0, 10, 8,
				2, 14, 15, 1, 0, 14, 14,
				2, 6, 8, 0, 1, 5, 10,
				2, 3, 8, 1, 0, 3, 6,
				3, 6, 15, 1, 0, 10, 14,
				3, 11, 15, 1, 1, 11, 14,
				3, 5, 12, 1, 1, 6, 13,
				3, 7, 8, 0, 0, 8, 6,
				3, 8, 7, 1, 0, 13, 5,
				3, 9, 7, 1, 0, 8, 4,
				3, 10, 7, 1, 0, 14, 3,
				3, 11, 7, 1, 0, 14, 1,
				3, 12, 7, 1, 1, 5, 3,
				3, 4, 5, 3, 0, 4, 6,
				3, 5, 5, 3, 0, 2, 5,
				3, 0, 5, 2, 1, 1, 7,
				3, 3, 4, 0, 1, 2, 4,
				3, 3, 3, 0, 0, 2, 3,
				3, 3, 2, 0, 1, 2, 2,
				3, 3, 0, 0, 0, 2, 1,
				3, 0, 0, 2, 1, 1, 2,
				3, 0, 2, 2, 1, 1, 4,
				4, 0, 4, 2, 1, 1, 4,
				4, 4, 3, 2, 1, 10, 4,
				4, 7, 0, 3, 1, 3, 10,
				4, 4, 5, 2, 0, 4, 6,
				4, 4, 7, 2, 0, 4, 8,
				4, 4, 12, 2, 1, 6, 13,
				4, 11, 12, 0, 1, 10, 13,
				4, 8, 0, 3, 0, 3, 11,
				4, 9, 0, 3, 0, 12, 14,
				4, 10, 0, 3, 1, 13, 3,
				4, 11, 0, 3, 1, 14, 3,
				4, 12, 15, 1, 1, 5, 12,
				4, 15, 15, 1, 1, 10, 12,
				4, 12, 0, 3, 1, 7, 5,
				4, 13, 0, 3, 0, 12, 6,
				4, 14, 0, 3, 0, 12, 8, 
				4, 15, 0, 3, 0, 12, 10,
				4, 13, 15, 1, 0, 11, 6,
				4, 14, 15, 1, 0, 11, 10,
				4, 15, 8, 3, 1, 8, 13
				];
						
		for (var i=0; i<data.length; i+=7) {
			ground[data[i]*levelSize+(data[i+2])*levelWidth+data[i+1]] = 2048 + this.terminalCount + 512*data[i+3];
			terminals[this.terminalCount++] = { door : this.doorCount };
			
			if (data[i+4]) { // horizontal door
				wallsH[data[i]*levelSize+(data[i+6])*levelWidth+data[i+5]] = this.doorCount;
				var room1 = roomNumber[data[i]*levelSize+(data[i+6]-1)*levelWidth+data[i+5]];
				var room2 = roomNumber[data[i]*levelSize+(data[i+6])*levelWidth+data[i+5]];
				this.passageways[room1+room2*this.roomCount] = [this.doorCount, data[i+5]+.5, data[i+6]-.5, data[i+5]+.5, data[i+6]+.5];
				this.passageways[room2+room1*this.roomCount] = [this.doorCount, data[i+5]+.5, data[i+6]+.5, data[i+5]+.5, data[i+6]-.5];
			} else {
				wallsV[data[i]*levelSize+(data[i+6])*levelWidth+data[i+5]] = this.doorCount;
				var room1 = roomNumber[data[i]*levelSize+(data[i+6])*levelWidth+data[i+5]-1];
				var room2 = roomNumber[data[i]*levelSize+(data[i+6])*levelWidth+data[i+5]];
				this.passageways[room1+room2*this.roomCount] = [this.doorCount, data[i+5]-.5, data[i+6]+.5, data[i+5]+.5, data[i+6]+.5];
				this.passageways[room2+room1*this.roomCount] = [this.doorCount, data[i+5]+.5, data[i+6]+.5, data[i+5]-.5, data[i+6]+.5];
			}
			++this.doorCount;
		}
		
		this.openDoors = [];
		data = [1, 0, 12, 12,	// open doors
				1, 0, 13, 12,
				1, 0, 6, 8,
				1, 0, 7, 8,
				1, 0, 14, 5,
				0, 0, 0, 8,
				1, 1, 9, 15,
				0, 1, 10, 6,
				0, 1, 5, 13,
				0, 1, 5, 14,
				0, 1, 7, 10,
				0, 1, 7, 11,
				1, 1, 10, 14,
				1, 1, 11, 14,
				1, 1, 14, 5,
				1, 2, 0, 4,
				1, 2, 0, 9,
				1, 2, 1, 3,
				0, 2, 3, 3,
				0, 2, 10, 1,
				1, 2, 8, 13,
				1, 2, 9, 13,
				1, 0, 14, 14,
				1, 0, 15, 14,
				1, 1, 14, 10,
				1, 1, 15, 10,
				1, 2, 10, 9,
				1, 2, 11, 9,
				1, 2, 12, 14,
				1, 2, 13, 14,
				1, 2, 14, 14,
				1, 2, 15, 14,
				1, 1, 10, 13,
				1, 1, 11, 13,
				0, 3, 3, 14,
				0, 3, 3, 11,
				1, 3, 8, 9,
				1, 3, 9, 9,
				0, 3, 12, 8,
				1, 3, 12, 10,
				1, 3, 13, 10,
				1, 3, 14, 8,
				1, 3, 15, 8,
				1, 3, 14, 10,
				1, 3, 15, 10,
				0, 3, 10, 1,
				0, 3, 10, 6,
				1, 3, 5, 7,
				1, 4, 1, 7,
				0, 4, 7, 3,
				1, 4, 14, 4,
				1, 4, 15, 4,
				0, 4, 4, 4,
				1, 4, 5, 3,
				0, 4, 3, 14,
				1, 4, 13, 8,
				1, 4, 3, 7,
				1, 4, 11, 8,
				1, 4, 11, 10,
				0, 4, 7, 12,
				0, 4, 10, 12
				];
		for (var i=0; i<data.length; i+=4) {
			if (data[i]) { // horizontal door
				wallsH[data[i+1]*levelSize+(data[i+3])*levelWidth+data[i+2]] = this.doorCount;
				var room1 = roomNumber[data[i+1]*levelSize+(data[i+3]-1)*levelWidth+data[i+2]];
				var room2 = roomNumber[data[i+1]*levelSize+(data[i+3])*levelWidth+data[i+2]];
				this.passageways[room1+room2*this.roomCount] = [this.doorCount, data[i+2]+.5, data[i+3]-.5, data[i+2]+.5, data[i+3]+.5];
				this.passageways[room2+room1*this.roomCount] = [this.doorCount, data[i+2]+.5, data[i+3]+.5, data[i+2]+.5, data[i+3]-.5];
			} else {
				wallsV[data[i+1]*levelSize+(data[i+3])*levelWidth+data[i+2]] = this.doorCount;
				var room1 = roomNumber[data[i+1]*levelSize+(data[i+3])*levelWidth+data[i+2]-1];
				var room2 = roomNumber[data[i+1]*levelSize+(data[i+3])*levelWidth+data[i+2]];
				this.passageways[room1+room2*this.roomCount] = [this.doorCount, data[i+2]-.5, data[i+3]+.5, data[i+2]+.5, data[i+3]+.5];
				this.passageways[room2+room1*this.roomCount] = [this.doorCount, data[i+2]+.5, data[i+3]+.5, data[i+2]-.5, data[i+3]+.5];
			}
			this.openDoors.push(this.doorCount++);
		}
		
		// link elevators to their door
		this.elevatorDoors = new Array(this.roomCount).fill(0);
		data = [11, 5,
				12, 81,
				14, 12,
				17, 21, 
				22, 84,
				23, 91, 
				36, 94,
				38, 96,
				40, 31,
				51, 27,
				52, 26,
				75, 47,
				76, 122,
				77, 50,
				78, 112, 
				79, 111,
				101, 125,
				102, 130];
		for (var i=0; i<data.length; i+=2) {
			this.elevatorDoors[data[i]] = data[i+1];
		}
		
		
		
	},
	
	
	/**
	 * Reset the door status and ground objects to the game beginning
	 *  - doors are closed, except those that are always open and have no controls
	 *  - objects are put back where they belong
	 */
	resetGroundAndDoors : function(doors, ground) {
		doors.fill(20);
		// some doors are open from the beginning (some even do not have controls)
		for (i=0; i<this.openDoors.length; ++i) {
			doors[this.openDoors[i]] = 0;
		}
		
		// reset ground objects
		var data = [0, 2, 7, 2,
					0, 15, 9, 1,
					1, 8, 14, 1,
					2, 2, 7, 3,
					2, 6, 0, 2,
					3, 11, 9, 3,
					4, 1, 1, 4,
					4, 7, 8, 5];
		for (var i=0; i<data.length; i+=4) {
			ground[data[i]*this.levelSize+data[i+2]*this.levelWidth+data[i+1]] = data[i+3];
		}
	},
	
	/**
	 * Retrieve the puzzle for a given terminal
	 * @param terminalId index of the terminal
	 */
	getCircuitDescription : function(terminalId) {
		// 0 = REGISTRY, 1-4=NOT, 5=AND2, 6=OR2, 7=SWITCH, 8=DIV2, 9=DIV3, 10=SHIFT UP, 11=SHIFT DOWN
		var data = [
			// 0-3 : ground floor, way to main elevator
			[ [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]],
			[ [7, 0, 1], [7, 2, 3], [0, 8], [0, 9], [0, 10], [0, 11], [0, 4], [0, 5], [0, 6], [0, 7]],
			[ [1, 1], [1, 5], [0, 0], [0, 8], [0, 2], [0, 3], [0, 4], [0, 9], [0, 6], [0, 7]],
			[ [1, 1], [1, 5], [50], [7, 4, 9], [0, 0], [0, 8], [0, 2], [0, 3], [0, 10], [0, 11], [0, 6], [0, 7]],
			// 4 : ground floor, elevator up
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [7, 0, 8], [7, 4, 10], [0, 12], [0, 13], [0, 2], [0, 9], [0, 14], [0, 15], [0, 6], [0, 11]],
			// 5 : ground floor, way to second yellow key
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			// 6 : ground floor, door to the blue key, access from 3rd floor only
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],	
			// 7 : ground floor, last door before exit on the way back
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 8-11 : 1st floor, direct way to elevator up
			[ [12, 0], [12, 2], [12, 4], [12, 6], [50], [10, 1], [10, 3], [10, 5], [10, 7], [50], [8, 8], [8, 9], [8, 10], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [1, 1], [1, 6], [50], [5, 0, 8], [5, 9, 7], [1, 3], [1, 4], [50], [8, 10], [1, 2], [1, 5], [8, 11], [0, 14], [0, 15], [0, 16], [0, 12], [0, 13], [0, 17], [0, 18], [0, 19]],
			// 12-15 : 1st floor, way to third yellow key
			[ [5, 0, 1], [5, 6, 7], [50], [8, 8], [8, 9], [50], [0, 10], [0, 11], [0, 2], [0, 3], [0, 4], [0, 5], [0, 12], [0, 13]],
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [7, 0, 8], [7, 2, 9], [7, 4, 10], [7, 6, 11], [50], [1, 13], [1, 15], [1, 17], [1, 19], [0, 12], [0, 20], [0, 14], [0, 21], [0, 16], [0, 22], [0, 18], [0, 23]],
			[ [12, 1], [12, 6], [50], [12, 0], [12, 7], [50], [10, 2], [11, 5], [50], [8, 8], [8, 9], [50], [10, 10], [11, 13], [50], [8, 14], [8, 15], [0, 16], [0, 17], [0, 11], [0, 3], [0, 4], [0, 12], [0, 18], [0, 19]],
			[ [5, 0, 1], [6, 4, 5], [50], [6, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 16 : 1st floor, door to elevator up, hidden in side track to 3rd key
			[ [5, 0, 1], [5, 6, 7], [50], [8, 8], [8, 9], [50], [0, 10], [0, 11], [0, 2], [0, 3], [0, 4], [0, 5], [0, 12], [0, 13]],
			// 17 : 1st floor, way to third yellow key
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [7, 0, 8], [7, 2, 9], [7, 4, 10], [7, 6, 11], [50], [1, 13], [1, 15], [1, 17], [1, 19], [0, 12], [0, 20], [0, 14], [0, 21], [0, 16], [0, 22], [0, 18], [0, 23]],
			// 18-19 : 1st floor, stairs on the way down to the exit
			[ [1, 1], [1, 5], [50], [7, 4, 9], [0, 0], [0, 8], [0, 2], [0, 3], [0, 10], [0, 11], [0, 6], [0, 7]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			// 20 : door to elevator on the side path to the blue key on floor below
			[ [1, 1], [1, 6], [50], [5, 0, 8], [5, 9, 7], [1, 3], [1, 4], [50], [8, 10], [1, 2], [1, 5], [8, 11], [0, 14], [0, 15], [0, 16], [0, 12], [0, 13], [0, 17], [0, 18], [0, 19]],
			// 21-24 : 2nd floor, access to 1st blue key (22) and rooms around
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [1, 8], [1, 9], [1, 10], [1, 11], [0, 0], [0, 12], [0, 2], [0, 13], [0, 4], [0, 14], [0, 6], [0, 15]],
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [1, 8], [2, 9], [1, 10], [1, 11], [0, 0], [0, 12], [0, 2], [0, 13], [0, 4], [0, 14], [0, 6], [0, 15]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [1, 1], [1, 6], [50], [5, 0, 8], [5, 9, 7], [2, 3], [2, 4], [50], [8, 10], [1, 2], [1, 5], [8, 11], [0, 14], [0, 15], [0, 16], [0, 12], [0, 13], [0, 17], [0, 18], [0, 19]],
			// 25-26 : 2nd floor, access to elevators up (25 gives access to the area with the 1st red key)
			[ [12, 0], [12, 2], [12, 4], [12, 6], [50], [10, 1], [10, 3], [10, 5], [10, 7], [50], [8, 8], [8, 9], [8, 10], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			[ [12, 0], [12, 2], [12, 4], [12, 6], [50], [10, 1], [10, 3], [10, 5], [10, 7], [50], [8, 8], [8, 9], [8, 10], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 27-30 : 2nd floor, rooms to elevator down, path to second blue key on ground floor
			[ [5, 0, 1], [5, 6, 7], [50], [8, 8], [8, 9], [0, 10], [0, 11], [0, 2], [0, 3], [0, 4], [0, 5], [0, 12], [0, 13]],
			[ [6, 0, 1], [6, 6, 7], [50], [8, 8], [8, 9], [0, 10], [0, 11], [0, 2], [0, 3], [0, 4], [0, 5], [0, 12], [0, 13]],
			[ [1, 0], [1, 1], [2, 2], [2, 3], [3, 4], [3, 5], [50], [7, 8, 9], [7, 10, 11], [7, 12, 13], [7, 6, 7], [50], [7, 15, 16], [7, 17, 18], [7, 19, 20],  [0, 14], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 21]],
			[ [12, 1], [12, 6], [50], [12, 0], [12, 7], [50], [10, 2], [11, 5], [50], [8, 8], [8, 9], [50], [10, 10], [11, 13], [50], [8, 14], [8, 15], [0, 16], [0, 17], [0, 11], [0, 3], [0, 4], [0, 12], [0, 18], [0, 19]],
			// 31-35 : 2nd floor, stairs on the way down to the exit
			[ [12, 1], [12, 6], [50], [12, 0], [12, 7], [50], [10, 2], [11, 5], [50], [8, 8], [8, 9], [50], [10, 10], [11, 13], [50], [8, 14], [8, 15], [0, 16], [0, 17], [0, 11], [0, 3], [0, 4], [0, 12], [0, 18], [0, 19]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [2, 1], [2, 6], [50], [5, 0, 8], [5, 9, 7], [1, 3], [1, 4], [50], [8, 10], [4, 2], [4, 5], [8, 11], [0, 14], [0, 15], [0, 16], [0, 12], [0, 13], [0, 17], [0, 18], [0, 19]],
			[ [2, 1], [2, 6], [50], [5, 0, 8], [5, 9, 7], [2, 3], [2, 4], [50], [8, 10], [4, 2], [4, 5], [8, 11], [0, 14], [0, 15], [0, 16], [0, 12], [0, 13], [0, 17], [0, 18], [0, 19]],
			// 36 : 2nd floor, access to room leading to elevators up (before 25-26)
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [6, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 37 : 2nd floor, access to room with red key (need to come back and access later)
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 38-39 : 3rd floor, side track to first red key
			[ [13, 2, 3], [0, 0], [0, 1], [0, 8], [0, 9], [0, 4], [0, 5], [0, 6], [0, 7]],
			[ [5, 0, 1], [13, 4, 5], [50], [10, 8], [10, 2], [50], [8, 12], [0, 11], [0, 13], [0, 14], [0, 3], [0, 9], [0, 10], [0, 6], [0, 7]],
			// 40 : 3rd floor, side track to purple key on 4th floor
			[ [5, 0, 1], [13, 4, 5], [50], [10, 8], [10, 2], [50], [8, 12], [0, 11], [0, 13], [0, 14], [0, 3], [0, 9], [0, 10], [0, 6], [0, 7]],
			// 41-46 : 3rd floor, access to elevator to 4th floor (main way) and way to ground floor (with 2nd blue key)
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			[ [12, 3], [12, 4], [8, 2], [8, 5], [50], [11, 8], [11, 9], [10, 10], [10, 11], [50], [7, 13, 14], [50], [5, 12, 16], [50], [6, 17, 15], [50], [8, 18], [8, 19], [0, 0], [0, 1], [0, 20], [0, 21], [0, 22], [0, 23], [0, 6], [0, 7]],
			[ [7, 0, 1], [13, 3, 4], [7, 6, 7], [0, 8], [0, 9], [0, 2], [0, 10], [0, 11], [0, 5], [0, 12], [0, 13]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			// 47-55 : 3rd floor, side track to purple key on 4th floor
			[ [5, 0, 1], [13, 4, 5], [50], [10, 8], [10, 2], [50], [8, 12], [0, 11], [0, 13], [0, 14], [0, 3], [0, 9], [0, 10], [0, 6], [0, 7]],
			[ [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			[ [12, 3], [12, 4], [8, 2], [8, 5], [50], [11, 8], [11, 9], [10, 10], [10, 11], [50], [7, 13, 14], [50], [5, 12, 16], [50], [6, 17, 15], [50], [8, 18], [8, 19], [0, 0], [0, 1], [0, 20], [0, 21], [0, 22], [0, 23], [0, 6], [0, 7]],
			[ [13, 3, 4], [0, 0], [0, 1], [0, 2], [0, 8], [0, 9], [0, 5], [0, 6], [0, 7]],
			[ [13, 3, 4], [0, 0], [0, 1], [0, 2], [0, 8], [0, 9], [0, 5], [0, 6], [0, 7]],
			[ [13, 3, 4], [0, 0], [0, 1], [0, 2], [0, 8], [0, 9], [0, 5], [0, 6], [0, 7]],
			[ [13, 1, 2], [13, 5, 6], [0, 0], [0, 8], [0, 9], [0, 3], [0, 4], [0, 10], [0, 11], [0, 7]],
			[ [12, 1], [12, 6], [50], [12, 0], [12, 7], [50], [10, 2], [11, 5], [50], [8, 8], [8, 9], [50], [10, 10], [11, 13], [50], [8, 14], [8, 15], [0, 16], [0, 17], [0, 11], [0, 3], [0, 4], [0, 12], [0, 18], [0, 19]],
			// 56 : 4th floor, opens door to purple key
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [7, 0, 8], [7, 2, 9], [7, 4, 10], [7, 6, 11], [50], [2, 13], [3, 15], [2, 17], [3, 19], [0, 12], [0, 20], [0, 14], [0, 21], [0, 16], [0, 22], [0, 18], [0, 23]],
			// 57 : 4th floor, first door upon exiting elevator
			[ [2, 0], [3, 6], [50], [5, 8, 1], [5, 9, 7], [50], [10, 10], [10, 2], [11, 5], [11, 11], [50], [8, 13], [8, 14], [50], [4, 3], [50], [4, 4], [0, 12], [0, 16], [0, 17], [0, 20], [0, 21], [0, 18], [0, 19], [0, 15]],
			// 58 : 4th floor, terminal in first room (first requirement of purple key)
			[ [0, 0], [0, 1], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 7]],
			// 59-60, 4th floor, terminals in diamond room, open from the inside (useless)
			[ [13, 3, 4], [0, 0], [0, 1], [0, 2], [0, 8], [0, 9], [0, 5], [0, 6], [0, 7]],
			[ [13, 1, 2], [13, 5, 6], [0, 0], [0, 8], [0, 9], [0, 3], [0, 4], [0, 10], [0, 11], [0, 7]],
			// 61-62, 4th floor, terminals in north corridor
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			[ [11, 1], [10, 3], [11, 4], [10, 6], [50], [2, 0], [2, 7], [50], [10, 8], [11, 9], [10, 10], [11, 11], [50], [0, 12], [0, 14], [0, 2], [0, 15], [0, 16], [0, 5], [0, 17], [0, 13]],
			// 63-64 : 4th floor, terminals in first room (need a solution)
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			[ [13, 3, 4], [0, 0], [0, 1], [0, 2], [0, 8], [0, 9], [0, 5], [0, 6], [0, 7]],
			// 65-66 : 4th floor, terminals in first room, opens door to exit stairs (need a solution)
			[ [12, 3], [12, 4], [8, 2], [8, 5], [50], [11, 8], [11, 9], [10, 10], [10, 11], [50], [7, 13, 14], [50], [5, 12, 16], [50], [6, 17, 15], [50], [8, 18], [8, 19], [0, 0], [0, 1], [0, 20], [0, 21], [0, 22], [0, 23], [0, 6], [0, 7]],
			[ [5, 0, 1], [13, 4, 5], [50], [10, 8], [10, 2], [50], [8, 12], [0, 11], [0, 13], [0, 14], [0, 3], [0, 9], [0, 10], [0, 6], [0, 7]],
			// 67-68 : 4th floor, terminals in top right room (need a solution)
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [50], [7, 23, 24], [7, 25, 26], [7, 27, 28], [50], [7, 22, 30], [7, 31, 32], [7, 33, 34], [7, 35, 29], [0, 36], [0, 37], [0, 38], [0, 39], [0, 40], [0, 41], [0, 42], [0, 43]],
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 69-72 : 4th floor, terminals in bottom right room, before stairs (no solution needed)
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [7, 0, 1], [7, 2, 3], [7, 4, 5], [7, 6, 7], [50], [7, 9, 10], [7, 11, 12], [7, 13, 14], [50], [7, 8, 16], [7, 17, 18], [7, 19, 20], [7, 21, 15], [0, 22], [0, 23], [0, 24], [0, 25], [0, 26], [0, 27], [0, 28], [0, 29]],
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			[ [6, 0, 1], [6, 4, 5], [50] , [5, 2, 3], [5, 6, 7], [50], [8, 8], [8, 10], [8, 9], [8, 11], [0, 12], [0, 13], [0, 14], [0, 15], [0, 16], [0, 17], [0, 18], [0, 19]],
			// 73-74 : 4th floor, terminals in top right room
			[ [11, 1], [10, 3], [11, 4], [10, 6], [50], [2, 0], [2, 7], [50], [10, 8], [11, 9], [10, 10], [11, 11], [50], [0, 12], [0, 14], [0, 2], [0, 15], [0, 16], [0, 5], [0, 17], [0, 13]],
			[ [1, 1], [1, 3], [1, 5], [1, 7], [50], [7, 0, 8], [7, 2, 9], [7, 4, 10], [7, 6, 11], [50], [2, 13], [3, 15], [2, 17], [3, 19], [0, 12], [0, 20], [0, 14], [0, 21], [0, 16], [0, 22], [0, 18], [0, 23]],
			// 75 : 4th floor, terminal next to stairs, opens door to north corridor (needs a solution)
			[ [5, 0, 1], [13, 4, 5], [50], [10, 8], [10, 2], [50], [8, 12], [0, 11], [0, 13], [0, 14], [0, 3], [0, 9], [0, 10], [0, 6], [0, 7]]

		];
		// 0 = REGISTRY, 1-4=NOT, 5=AND2, 6=OR2, 7=SWITCH, 8=DIV2, 9=DIV3, 10=SHIFT UP, 11=SHIFT DOWN, 12=END, 13=DECREASE
		return data[terminalId];
	},
	
	/**
	 * Retrieve the registry value that opens the door for a given terminal
	 * @param terminalId index of the terminal
	 */
	getTerminalCode : function(terminalId) {
		var data = [
			// 0-2 : ground floor, one yellow key (1) only
			[0, 0, 0, 1, 0, 0, 0, 0],
			[0, 0, 1, 0, 0, 0, 0, 0],
			[0, 0, 0, 0, 0, 1, 0, 0],
			// 3-4 : ground floor, two yellow keys (1)
			[0, 1, 0, 0, 1, 1, 0, 0],
			[0, 0, 0, 1, 1, 1, 0, 1],
			// 5 : ground floor, one yellow key (1) only, access to second key
			[0, 0, 1, 0, 0, 0, 0, 0],
			// 6 : ground floor, door to the blue key, access from 3rd floor only, got three yellow keys (1), one blue (2), one red (3)
			[1, 2, 1, 3, 1, 0, 0, 0],
			// 7 : ground floor, last door before exit on the way back, all keys
			[4, 4, 2, 2, 1, 1, 3, 3],
			// 8-11 : 1st floor, direct way to elevator up, two yellow keys (1)
			[1, 1, 0, 0, 1, 1, 0, 0],
			[0, 1, 0, 0, 0, 1, 0, 0],
			[0, 1, 0, 0, 0, 1, 0, 1],
			[1, 1, 1, 1, 1, 1, 1, 1],
			// 12-15 : 1st floor, two yellow keys (1), way to third yellow key
			[0, 0, 0, 0, 0, 0, 1, 1],
			[1, 0, 0, 1, 1, 1, 1, 1],
			[1, 1, 1, 0, 0, 1, 1, 1],
			[0, 0, 1, 1, 1, 1, 0, 0],
			// 16 : 1st floor, door to elevator up, hidden in side track to 3rd key, access on the way back with three yellow keys
			[0, 0, 0, 1, 0, 0, 1, 1],
			// 17 : 1st floor, two yellow keys (1), way to third yellow key
			[1, 1, 0, 1, 1, 0, 1, 1],
			// 18-19 : stairs on the way down to the exit, all keys
			[1, 1, 4, 1, 1, 1, 0, 0],
			[1, 2, 4, 2, 1, 1, 0, 0],
			// 20 : door to elevator on the side path to the blue key on floor below, got three yellow keys (1), one blue (2), one red (3)
			[1, 1, 0, 1, 1, 0, 1, 1],
			//  21-24 : 2nd floor, access to 1st blue key (22) and rooms around. 3 yellow keys (1) for 22, plus one blue key (2) for 21, 23, 24
			[0, 1, 0, 1, 0, 1, 0, 1],
			[0, 1, 0, 2, 0, 1, 0, 0],
			[0, 0, 2, 0, 1, 0, 1, 0],
			[0, 0, 0, 2, 0, 0, 0, 0],
			// 25 : 2nd floor, access to elevator up to area with red key : got three yellow keys (1) and one blue (2)
			[0, 0, 2, 2, 1, 1, 0, 0],
			// 26 : 2nd floor, access to elevator up to upper floors (main path) : got three yellow keys (1), one blue (2) and one red (3)
			[3, 3, 2, 2, 1, 1, 0, 0],
			// 27-30 : 2nd floor, rooms to elevator down, path to second blue key on ground floor, got three yellow keys (1), one blue (2), one red (3)
			[2, 2, 0, 0, 0, 0, 1, 1],
			[3, 3, 0, 0, 0, 0, 2, 2],
			[1, 0, 1, 3, 0, 0, 0, 3],
			[3, 3, 3, 0, 0, 1, 1, 1],
			// 31-35 : 2nd floor, stairs on the way down to the exit
			[4, 4, 4, 0, 0, 2, 2, 2], 
			[4, 2, 2, 0, 0, 0, 0, 0],
			[0, 2, 2, 0, 4, 0, 3, 3],
			[2, 2, 0, 0, 0, 0, 2, 2],
			[2, 2, 4, 0, 0, 4, 2, 2],
			// 36 : 2nd floor, access to room leading to elevators up (before 25-26) : got three yellow keys (1) and one blue (2)
			[1, 1, 2, 2, 1, 1, 0, 0],
			// 37 : 2nd floor, access to room with second red key : after getting 1st red on 3rd floor and 2nd blue on ground floor, got three yellow keys (1), two blue (2) and one red (3)
			[3, 3, 2, 2, 1, 1, 1, 1],
			// 38-39 : 3rd floor, side track to first red key : got three yellow keys (1) and one blue (2)
			[1, 1, 1, 0, 0, 0, 0, 0],
			[1, 1, 1, 0, 1, 0, 0, 0],
			// 40 : 3rd floor, side track to purple key on 4th floor, door in main way : got three yellow keys (1), one blue (2) and one red (3)
			[2, 1, 1, 0, 0, 0, 0, 0],
			// 41-46 : 3rd floor, access to elevator to 4th floor (main way) and way to ground floor (with 2nd blue key) : got three yellow keys (1), one blue (2) and one red (3)
			[0, 1, 0, 1, 0, 2, 0, 1],
			[3, 1, 0, 1, 0, 2, 0, 1],
			[3, 3, 1, 1, 0, 0, 0, 0],
			[0, 0, 1, 1, 3, 3, 0, 0],
			[1, 0, 0, 2, 1, 0, 1, 0],
			[3, 2, 1, 1, 1, 0, 0, 0],
			// 47-55 : 3rd floor, side track to purple key on 4th floor : got three yellow keys (1), two blue (2) and two red (3)
			[2, 1, 1, 0, 2, 2, 0, 0],
			[0, 0, 3, 3, 3, 3, 0, 0],
			[0, 0, 3, 2, 2, 3, 0, 0],
			[0, 0, 3, 3, 3, 3, 0, 0],
			[0, 0, 0, 3, 3, 0, 0, 0],
			[0, 0, 0, 2, 2, 0, 0, 0],
			[0, 1, 0, 2, 1, 0, 2, 0],
			[0, 1, 2, 2, 1, 0, 2, 0],
			[3, 3, 3, 2, 3, 2, 2, 2],
			// 56 : 4th floor, opens door to purple key  : got three yellow keys (1), two blue (2) and two red (3)
			[0, 2, 0, 3, 0, 2, 0, 3],
			// 57 : 4th floor, first door upon exiting elevator : got all keys
			[2, 3, 3, 4, 0, 2, 2, 3],
			// 58 : 4th floor, terminal in first room (first requirement of purple key)
			[0, 0, 4, 0, 0, 0, 0, 0],
			// 59-60, 4th floor, terminals in diamond room, open from the inside (useless)
			[0, 0, 0, 3, 2, 0, 0, 0],
			[0, 3, 2, 0, 0, 2, 3, 0],
			// 61-62, 4th floor, terminals in north corridor
			[0, 4, 0, 2, 0, 2, 0, 0],
			[0, 0, 0, 4, 0, 0, 0, 0],
			// 63-64 : 4th floor, terminals in first room
			[0, 1, 2, 3, 4, 3, 2, 1],
			[0, 4, 0, 2, 2, 0, 0, 0],
			// 65-66 : 4th floor, terminals in first room, opens door to exit stairs (need a solution)
			[0, 0, 0, 0, 4, 4, 2, 2],
			[2, 0, 0, 0, 2, 3, 0, 0],
			// 67-68 : 4th floor, terminals in top right room (need a solution)
			[2, 0, 4, 0, 2, 0, 0, 3],
			[2, 2, 1, 1, 4, 4, 1, 1],
			// 69-72 : 4th floor, terminals in bottom right room, before stairs (no solution needed)
			[0, 0, 4, 0, 0, 4, 0, 0],
			[1, 0, 2, 0, 0, 2, 0, 1],
			[2, 2, 4, 4, 1, 1, 2, 2],
			[4, 4, 2, 2, 1, 1, 3, 3],
			// 73-74 : 4th floor, terminals in top right room
			[0, 2, 2, 4, 0, 0, 0, 2],
			[0, 0, 0, 0, 0, 0, 0, 0],
			// 75 : 4th floor, terminal next to stairs, opens door to north corridor (needs a solution)
			[3, 0, 0, 0, 3, 0, 0, 0]
			
		];
		return data[terminalId];
	}
	
	
	
	
}